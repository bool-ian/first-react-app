{"version":3,"sources":["deer","dragging","turkey","shooting","tree","wall","logo.svg","Blogs.js","Home.js","Videos.js","Recipes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Blogs","style","textAlign","Component","Home","marginBottom","marginTop","paddingLeft","paddingRight","autoPlay","autoPlayInterval","fadeOutAnimation","src","Img","className","alignItems","Img2","Img3","Img4","Img5","Img6","fontSize","href","target","font","Videos","Recipes","App","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sIAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,uDCA3CD,EAAOC,QAAU,IAA0B,kC,+ICe5BC,E,uKAXX,OACE,6BACE,wBAAIC,MAAO,CAACC,UAAW,WAAvB,SACA,uBAAGD,MAAO,CAACC,UAAW,WAAtB,uB,GALYC,a,uIC0CLC,E,uKA9BX,OACE,6BACE,wBAAIH,MAAO,CAACC,UAAW,SAAUG,aAAc,GAAIC,UAAW,KAA9D,mBACA,uBAAGL,MAAO,CAACC,UAAW,SAAUK,YAAa,IAAKC,aAAc,MAAhE,6NAGA,uBAAGP,MAAO,CAACC,UAAW,SAAUG,aAAc,GAAIE,YAAa,IAAKC,aAAc,MAAlF,oPAEA,kBAAC,IAAD,CAAeC,UAAQ,EAACC,iBAAiB,OAAOC,kBAAkB,GAChE,yBAAKC,IAAKC,IAAKC,UAAU,YAAYb,MAAO,CAACc,WAAY,YACzD,yBAAKH,IAAKI,IAAMF,UAAU,YAAYb,MAAO,CAACc,WAAY,YAC1D,yBAAKH,IAAKK,IAAMH,UAAU,YAAYb,MAAO,CAACc,WAAY,YAC1D,yBAAKH,IAAKM,IAAMJ,UAAU,YAAYb,MAAO,CAACc,WAAY,YAC1D,yBAAKH,IAAKO,IAAML,UAAU,YAAYb,MAAO,CAACc,WAAY,YAC1D,yBAAKH,IAAKQ,IAAMN,UAAU,YAAYb,MAAO,CAACc,WAAY,aAG5D,yBAAKd,MAAO,CAACC,UAAW,SAAUmB,SAAU,KAC1C,uBAAGC,KAAK,0CAA0CC,OAAQ,SAAUtB,MAAO,CAACuB,KAAM,YAAlF,YACA,6BACA,6BACA,uBAAGF,KAAK,8CAA8CC,OAAQ,SAC3DtB,MAAO,CAACuB,KAAM,YADjB,mB,GAvBSrB,aCGJsB,E,uKAXX,OACE,6BACE,wBAAIxB,MAAO,CAACC,UAAW,WAAvB,UACA,uBAAGD,MAAO,CAACC,UAAW,WAAtB,wB,GALaC,aCcNuB,E,uKAXX,OACE,6BACE,wBAAIzB,MAAO,CAACC,UAAW,WAAvB,WACA,uBAAGD,MAAO,CAACC,UAAW,WAAtB,yB,GALcC,aCOP,SAASwB,IACtB,OACE,gCACE,kBAAC,IAAD,KACE,6BACE,yBAAKb,UAAW,UAChB,4BACI,kBAAC,IAAD,CAAMc,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAWJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,WC9BMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.37923e80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deer.73cd4a03.bin\";","module.exports = __webpack_public_path__ + \"static/media/dragging.4bd43a35.bin\";","module.exports = __webpack_public_path__ + \"static/media/turkey.450907bd.bin\";","module.exports = __webpack_public_path__ + \"static/media/shooting.2bf71c7d.bin\";","module.exports = __webpack_public_path__ + \"static/media/tree.a6c1bda2.bin\";","module.exports = __webpack_public_path__ + \"static/media/wall.023a46b7.bin\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport './App.css';\nclass Blogs extends Component {\n  render() {\n    return (\n      <div>\n        <h2 style={{textAlign: \"center\"}}>BLOGS</h2>\n        <p style={{textAlign: \"center\"}}>\n          Blogs go here.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Blogs;","import React, {Component} from \"react\";\nimport './App.css';\nimport 'react-slideshow-image/dist/styles.css';\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport Img from './deer';\nimport Img2 from './dragging';\nimport Img3 from './turkey';\nimport Img4 from './shooting';\nimport Img5 from './tree';\nimport Img6 from './wall';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h3 style={{textAlign: \"center\", marginBottom: 50, marginTop: 50}}>My Outdoor Life</h3>\n        <p style={{textAlign: \"center\", paddingLeft: 500, paddingRight: 500}}>My name is Ian Gamble, and welcome to my page. I would describe myself as an\n          avid outdoorsman, who also happens to be a software engineer. In fact, this page was built 100% from scratch, line by line, by your's\n        truly!</p>\n        <p style={{textAlign: \"center\", marginBottom: 50, paddingLeft: 500, paddingRight: 500}}>The purpose for this page is to share with you my stories, videos, and even some awesome wild game recipes. Whether you are a lifelong\n        outdoorsman, or thinking about diving into the outdoor lifestyle, I hope this page has something for you.</p>\n        <AliceCarousel autoPlay autoPlayInterval=\"5000\" fadeOutAnimation={true}>\n          <img src={Img} className=\"sliderimg\" style={{alignItems: \"center\"}}/>\n          <img src={Img2} className=\"sliderimg\" style={{alignItems: \"center\"}}/>\n          <img src={Img3} className=\"sliderimg\" style={{alignItems: \"center\"}}/>\n          <img src={Img4} className=\"sliderimg\" style={{alignItems: \"center\"}}/>\n          <img src={Img5} className=\"sliderimg\" style={{alignItems: \"center\"}}/>\n          <img src={Img6} className=\"sliderimg\" style={{alignItems: \"center\"}}/>\n        </AliceCarousel>\n\n        <div style={{textAlign: \"center\", fontSize: 20}}>\n          <a href=\"https://www.facebook.com/ian.gamble.39/\" target={\"_blank\"} style={{font: \"veranda\"}}>FaceBook</a>\n          <br/>\n          <br/>\n          <a href=\"https://www.instagram.com/ian_gamble/?hl=en\" target={\"_blank\"}\n             style={{font: \"veranda\"}}>Instagram</a>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport './App.css';\nclass Videos extends Component {\n  render() {\n    return (\n      <div>\n        <h2 style={{textAlign: \"center\"}}>VIDEOS</h2>\n        <p style={{textAlign: \"center\"}}>\n          Videos go here.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Videos;","import React, { Component } from \"react\";\nimport './App.css';\nimport App from \"./App\";\nclass Recipes extends Component {\n  render() {\n    return (\n      <div>\n        <h2 style={{textAlign: \"center\"}}>RECIPES</h2>\n        <p style={{textAlign: \"center\"}}>\n          Recipes go here.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Recipes;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport './index.css'\nimport Blogs from \"./Blogs\";\nimport Home from \"./Home\";\nimport Videos from \"./Videos\";\nimport Recipes from \"./Recipes\";\n\nexport default function App() {\n  return (\n    <header>\n      <Router>\n        <div>\n          <div className={\"topnav\"}>\n          <ul>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/blogs\">Blogs</Link>\n              <Link to=\"/videos\">Videos</Link>\n              <Link to=\"/recipes\">Recipes</Link>\n          </ul>\n          </div>\n\n          {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/blogs\">\n              <Blogs />\n            </Route>\n            <Route path=\"/videos\">\n              <Videos />\n            </Route>\n            <Route path=\"/recipes\">\n              <Recipes />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </header>\n\n  );\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}